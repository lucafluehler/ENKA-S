name: Build and Test

on:
  push:
    paths:
      - "app/**"
      - "core/**"
      - "tests/**"
  pull_request:
    paths:
      - "app/**"
      - "core/**"
      - "tests/**"
  workflow_dispatch:

jobs:
  call-build-workflow:
    name: Build
    uses: ./.github/workflows/reusable-build.yml
    with:
      build-tests: true
    secrets: inherit 

  test:
    name: Test on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    needs: call-build-workflow
    strategy:
      matrix:
        os: [ubuntu-22.04, windows-latest, macos-latest]
    steps:
      - name: Install Qt
        uses: jurplel/install-qt-action@v4
        with:
          version: '6.7.3'
          modules: 'qtcharts'

      - name: Install modern G++ (Linux)
        if: runner.os == 'Linux'
        run: |
          sudo apt-get update
          sudo apt-get install -y software-properties-common
          sudo add-apt-repository -y ppa:ubuntu-toolchain-r/test
          sudo apt-get update
          sudo apt-get install -y g++-13

      - name: Download Build Artifact
        uses: actions/download-artifact@v4
        with:
          name: build-${{ matrix.os }}
          path: build/
      
      - name: Add Execute Permissions to Test Runner (Linux/macOS)
        if: runner.os != 'Windows'
        run: find build/tests -type f -name "run_*_tests" -exec chmod +x {} +

      - name: Run Tests (Ubuntu)
        if: runner.os == 'Linux'
        working-directory: ./build
        run: xvfb-run -a ctest --build-config Release --output-on-failure

      - name: Run Tests (others)
        if: runner.os != 'Linux'
        working-directory: ./build
        run: ctest --build-config Release --output-on-failure

  lint-check:
    name: Clang-Format
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout repository
        uses: actions/checkout@v5

      - name: Run clang-format check
        uses: jidicula/clang-format-action@v4.15.0
        with:
          clang-format-version: '20'
          check-path: '.'
          exclude-regex: '(^|.*/)app/vendor(/|$)'
