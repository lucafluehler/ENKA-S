name: Build and Test

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]
  workflow_dispatch:

jobs:
  build-and-test:
    name: Build on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v5

      - name: Install Qt
        uses: jurplel/install-qt-action@v4.3.0
        with:
          version: '6.5.3'
          modules: 'qtcharts'

      - name: Install GCC (macOS only)
        if: runner.os == 'macOS'
        run: |
          brew update
          brew install gcc
          echo "GCC installed"

      - name: Configure CMake
        run: |
          if [[ "$RUNNER_OS" == "macOS" ]]; then
            export CC=/opt/homebrew/bin/gcc-13
            export CXX=/opt/homebrew/bin/g++-13
          fi
          cmake -B build -S . -DCMAKE_BUILD_TYPE=Release -DENKAS_BUILD_TESTS=ON \
                -DCMAKE_C_COMPILER=$CC -DCMAKE_CXX_COMPILER=$CXX

      - name: Print compiler and CMake info
        run: |
          echo "CMake version:"
          cmake --version

          echo "C++ compiler version:"
          $CXX --version || g++ --version || clang++ --version

          echo "C compiler version:"
          $CC --version || gcc --version || clang --version

      - name: Configure CMake
        run: cmake -B build -S . -DCMAKE_BUILD_TYPE=Release -DENKAS_BUILD_TESTS=ON

      - name: Build
        run: cmake --build build --config Release

      - name: Run Tests
        working-directory: ./build
        run: ctest --build-config Release --output-on-failure

  lint-check:
    name: Clang-Format
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v5

      - name: Run clang-format check
        uses: jidicula/clang-format-action@v4.15.0
        with:
          check-path: '.'
          exclude-path: './app/src/vendor'