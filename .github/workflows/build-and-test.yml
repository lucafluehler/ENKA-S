name: Build and Test

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]
  workflow_dispatch:

jobs:
  build-and-test:
    name: Build on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v5

      - name: Install Qt
        uses: jurplel/install-qt-action@v4.3.0
        with:
          version: '6.5.3'
          modules: 'qtcharts'

      - name: Install Homebrew LLVM (macOS only)
        if: runner.os == 'macOS'
        run: |
          brew update
          brew install llvm
          echo "Installed Homebrew LLVM"
          # Make brewed clang visible to subsequent steps
          echo "PATH=/opt/homebrew/opt/llvm/bin:$PATH" >> $GITHUB_ENV
          # Provide include/lib hints for other tools if needed
          echo "LDFLAGS=-L/opt/homebrew/opt/llvm/lib" >> $GITHUB_ENV
          echo "CPPFLAGS=-I/opt/homebrew/opt/llvm/include" >> $GITHUB_ENV
          echo "PKG_CONFIG_PATH=/opt/homebrew/opt/llvm/lib/pkgconfig:$PKG_CONFIG_PATH" >> $GITHUB_ENV

      - name: Print compiler and CMake info
        run: |
          echo "CMake version:"
          cmake --version

          echo "Which clang/clang++ on PATH:"
          which clang || true
          which clang++ || true

          echo "C compiler version (try CC/C++ env first):"
          ($CC --version 2>/dev/null) || (clang --version)

          echo "C++ compiler version:"
          ($CXX --version 2>/dev/null) || (clang++ --version)

      - name: Configure CMake
        run: |
          if [[ "${{ matrix.os }}" == "macos-latest" ]] || [[ "$RUNNER_OS" == "macOS" ]]; then
            # Use explicit brewed clang binaries to force CMake to use Homebrew LLVM
            CMAKE_CC=/opt/homebrew/opt/llvm/bin/clang
            CMAKE_CXX=/opt/homebrew/opt/llvm/bin/clang++
          else
            CMAKE_CC=$CC
            CMAKE_CXX=$CXX
          fi

          cmake -B build -S . -DCMAKE_BUILD_TYPE=Release -DENKAS_BUILD_TESTS=ON \
            -DCMAKE_C_COMPILER=${CMAKE_CC} -DCMAKE_CXX_COMPILER=${CMAKE_CXX}

      - name: Build
        run: cmake --build build --config Release

      - name: Run Tests
        working-directory: ./build
        run: ctest --build-config Release --output-on-failure

  lint-check:
    name: Clang-Format
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v5

      - name: Run clang-format check
        uses: jidicula/clang-format-action@v4.15.0
        with:
          check-path: '.'
          exclude-path: './app/src/vendor'